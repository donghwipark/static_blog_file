{"version":3,"sources":["components/common/Button/Button.js","components/common/Header/Header.js","lib/api.js","store/modules/base.js","containers/common/HeaderContainer.js","components/common/Footer/Footer.js","containers/common/FooterContainer.js","containers/VideoTop/VideoTop.js","components/common/PageTemplate/PageTemplate.js","containers/ListWrapper/ListWrapper.js","components/list/PostList/PostList.js","components/list/Pagination/Pagination.js","store/modules/list.js","containers/list/ListContainer.js","pages/ListPage.js","components/post/Postinfo/Postinfo.js","components/common/MarkdownRender/MarkdownRender.js","components/post/PostBody/PostBody.js","store/modules/post.js","containers/post/Post.js","components/modal/ModalWrapper/ModalWrapper.js","components/modal/AskRemoveModal/AskRemoveModal.js","containers/modal/AskRemoveModalcontainer.js","pages/PostPage.js","components/editor/EditorTemplate/EditorTemplate.js","components/editor/EditorHeader/EditorHeader.js","components/editor/EditorPane/EditorPane.js","store/modules/editor.js","containers/editor/EditorPaneContainer.js","components/editor/PreviewPane/PreviewPane.js","containers/editor/PreviewPaneContainer.js","containers/editor/EditorHeaderContainer.js","pages/EditorPage.js","pages/NotFoundPage.js","components/modal/LoginModal/LoginModal.js","containers/modal/LoginModalContainer.js","containers/common/Base.js","components/App.js","store/configure.js","Root.js","serviceWorker.js","index.js"],"names":["cx","classNames","bind","styles","Div","_ref","children","rest","Object","objectWithoutProperties","react_default","a","createElement","Button","_ref2","to","onClick","disabled","_ref2$theme","theme","Element","Link","className","Header","postId","logged","onRemove","react_router_dom","common_Button_Button","key","concat","PORT","getPost","id","axios","get","showModal","createAction","hideModal","login","password","post","logout","checkLogin","changePasswordInput","initializeLoginModal","tempLogin","initialState","Map","modal","remove","loginModal","error","handleActions","_objectSpread","_objectSpread2","defineProperty","state","action","modalName","payload","setIn","pender","type","onSuccess","set","onError","data","_objectSpread3","value","HeaderContainer","handleRemove","_this","props","BaseActions","this","_this$props","match","params","common_Header_Header","Component","connect","base","dispatch","bindActionCreators","baseActions","withRouter","Footer","onLoginClick","FooterContainer","handleLoginClick","regenerator_default","async","_context","prev","next","awrap","window","location","reload","t0","console","log","abrupt","stop","common_Footer_Footer","VideoTop","title","frameborder","width","height","src","allow","allowFullScreen","PageTemplate","common_HeaderContainer","containers_VideoTop_VideoTop","common_FooterContainer","ListWrapper","PostItem","body","publishedDate","tags","tagList","map","tag","moment","format","removeMd","PostList","postList","posts","_post$toJS","toJS","_id","PostList_PostItem","Pagination","page","lastPage","createPagePath","getPostList","queryString","stringify","meta","List","list_objectSpread","headers","fromJS","parseInt","ListContainer","ListActions","prevProps","prevState","document","documentElement","scrollTop","_this$props2","loading","list_PostList_PostList","list_Pagination_Pagination","list","pending","listActions","ListPage","_match$params","_match$params$page","common_PageTemplate_PageTemplate","containers_ListWrapper_ListWrapper","list_ListContainer","PostInfo","MarkdownRender","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","html","renderMarkdown","markdown","setState","marked","breaks","sanitize","Prism","highlightAll","markup","__html","dangerouslySetInnerHTML","PostBody","MarkdownRender_MarkdownRender_MarkdownRender","api","removePost","delete","post_objectSpread","Post","initialize","PostActions","Postinfo_Postinfo","post_PostBody_PostBody","postActions","ModalWrapper","animate","startAnimations","setTimeout","visible","animation","AskRemoveModal","onConfirm","onCancel","ModalWrapper_ModalWrapper_ModalWrapper","AskRemoveModalContainer","handleCancel","handleConfirm","history","push","modal_AskRemoveModal_AskRemoveModal","getIn","PostPage","post_Post","AskRemoveModalcontainer","EditorTemplate","leftPercentage","handleMouseMove","e","clientX","innerWidth","handleMouseUp","removeEventListener","handleSeparatorMouseDown","addEventListener","header","editor","preview","leftStyle","flex","rightStyle","separatorStyle","left","style","onMouseDown","EditorHeader","onGoBack","onSubmit","isEdit","EditorPane","codeMirror","cursor","initializeEditor","CodeMirror","mode","lineNumbers","lineWrapping","on","handleChangeMarkdown","handleChange","onChangeInput","_e$target","target","name","doc","getCursor","getValue","setValue","setCursor","_this2","placeholder","onChange","ref","changeInput","writePost","editPost","_ref3","patch","editor_objectSpread","editor_objectSpread2","_action$payload","_action$payload$data","join","EditorPaneContainer","handleChangeInput","EditorActions","EditorPane_EditorPane_EditorPane","editorActions","PreviewPane","PreviewPaneContainer","editor_PreviewPane_PreviewPane","EditorHeaderContainer","handleGoback","goBack","handleSubmit","_queryString$parse","toConsumableArray","Set","split","trim","parse","search","EditorHeaderContainer_objectSpread","editor_EditorHeader_EditorHeader","EditorPage","editor_EditorTemplate_EditorTemplate","editor_EditorHeaderContainer","editor_EditorPaneContainer","editor_PreviewPaneContainer","NotFoundPage","LoginModal","onLogin","onKeyPress","autoFocus","LoginModalContainer","handleLogin","localStorage","handleKeyPress","modal_LoginModal_LoginModal","Base","modal_LoginModalContainer","App","react_router","exact","path","component","common_Base","reducers","combineReducers","modules","middlewares","penderMiddleware","composeEnhancers","compose","store","preloadedState","createStore","applyMiddleware","apply","configure","Root","es","components_App","Boolean","hostname","ReactDOM","render","src_Root","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.cfcc4085.chunk.js","sourcesContent":["import React from 'react';\nimport styles from './Button.scss';\nimport classNames from 'classnames/bind';\nimport { Link } from 'react-router-dom';\n\nconst cx = classNames.bind(styles);\n\n// All the values from className, onClick is on the rest\n// On JSX if you use ..., you will get to the props\nconst Div = ({children, ...rest}) => <div {...rest}>{children}</div>\n\nconst Button = ({\n    children, to, onClick, disabled, theme = 'default',\n  }) => {\n    // Use Link on existence of to, otherwise use div\n    // Use div even on the disabled\n    const Element = (to && !disabled) ? Link : Div;\n\n    // onClick will not \n    return (\n        <Element\n            to={to}\n            className={cx('button', theme, {disabled})}\n            onClick={disabled ? () => null : onClick}>\n            {children}\n        </Element>\n    )\n}\n\nexport default Button","import React from 'react';\nimport styles from './Header.scss';\nimport classNames from 'classnames/bind';\nimport { Link } from 'react-router-dom';\nimport Button from '../Button/Button.js';\n\nconst cx = classNames.bind(styles);\n\nconst Header = ({postId, logged, onRemove}) => (\n  <header className={cx('header')}>\n    <div className={cx('header-content')}>\n      <div className={cx('brand')}>\n        <Link to=\"/\">Eastlead</Link>\n      </div>\n      { logged &&\n      <div className={cx('right')}>\n        {\n          // Rendering array to keep flex\n          postId && [\n            <Button key=\"edit\" theme=\"outline\" to={`/editor?id=${postId}`}>edit</Button>,\n            <Button key=\"remove\" theme=\"outline\" onClick={onRemove}>remove</Button>\n          ]\n        }\n        <Button theme=\"outline\" to=\"/editor\">New Post</Button>\n      </div> }\n    </div>\n  </header>\n);\n\nexport default Header;","import axios from 'axios'\nimport queryString from 'query-string'\nconst PORT = 'http://ec2-3-17-61-152.us-east-2.compute.amazonaws.com:4000';\nexport const writePost = ({title, body, tags}) => axios.post(`${PORT}/api/posts`, {title, body, tags})\nexport const getPost = (id) => axios.get(`${PORT}/api/posts/${id}`)\nexport const getPostList = ({tag, page}) => axios.get(`${PORT}/api/posts/?${queryString.stringify({tag, page})}`)\nexport const editPost = ({id, title, body, tags}) => axios.patch(`${PORT}/api/posts/${id}`, {title, body, tags})\nexport const removePost = (id) => axios.delete(`${PORT}/api/posts/${id}`)\nexport const login = (password) => axios.post(`${PORT}/api/auth/login`, { password })\nexport const checkLogin = () => axios.get(`${PORT}/api/auth/check`)\nexport const logout = () => axios.post(`${PORT}/api/auth/logout`)","import { createAction, handleActions } from 'redux-actions'\n\nimport { Map } from 'immutable';\nimport { pender } from 'redux-pender';\nimport * as api from '../../lib/api'\n\n// action types\nconst SHOW_MODAL = 'base/SHOW_MODAL'\nconst HIDE_MODAL = 'base/HIDE_MODAL'\nconst LOGIN = 'base/LOGIN'\nconst LOGOUT = 'base/LOGOUT'\nconst CHECK_LOGIN = 'base/CHECK_LOGIN'\nconst CHANGE_PASSWORD_INPUT = 'base/CHANGE_PASSWORD_INPUT'\nconst INITIALIZE_LOGIN_MODAL = 'base/INITIALIZE_LOGIN_MODAL'\nconst TEMP_LOGIN = 'base/TEMP_LOGIN'\n\n// action creators\nexport const showModal = createAction(SHOW_MODAL)\nexport const hideModal = createAction(HIDE_MODAL)\nexport const login = createAction(LOGIN, api.login)\nexport const logout = createAction(LOGOUT, api.logout)\nexport const checkLogin = createAction(CHECK_LOGIN, api.checkLogin)\nexport const changePasswordInput = createAction(CHANGE_PASSWORD_INPUT)\nexport const initializeLoginModal = createAction(INITIALIZE_LOGIN_MODAL)\nexport const tempLogin = createAction(TEMP_LOGIN)\n\n// initial state \nconst initialState = Map({\n    // Modal's visualisation state\n    modal: Map({\n        remove: false,\n        login: false // Login Modal which will be modified after\n    }),\n    // Login Modal status\n    loginModal: Map({\n        password: '',\n        error: false\n    }),\n    logged: false // Login status\n});\n\n// reducer\nexport default handleActions({\n    [SHOW_MODAL]: (state, action) => {\n        const { payload: modalName } = action\n        return state.setIn(['modal', modalName], true)\n    },\n    [HIDE_MODAL]: (state, action) => {\n        const { payload: modalName } = action\n        return state.setIn(['modal', modalName], false)\n    },\n    ...pender({\n        type: LOGIN,\n        onSuccess: (state, action) => { // On login success\n            return state.set('logged', true)\n        },\n        onError: (state, action) => { // On error occur\n            return state.setIn(['loginModal', 'error'], true)\n                        .setIn(['loginModal', 'password'], '')\n        }\n    }), \n    ...pender({\n        type: CHECK_LOGIN,\n        onSuccess: (state, action) => {\n            const { logged } = action.payload.data\n            return state.set('logged', logged)\n        }\n    }),\n    [CHANGE_PASSWORD_INPUT]: (state, action) => {\n        const { payload: value } = action\n        return state.setIn(['loginModal', 'password'], value)\n    },\n    [INITIALIZE_LOGIN_MODAL]: (state, action) => {\n        // Set modal to initial status\n        return state.set('loginModal', initialState.get('loginModal'))\n    },\n    [TEMP_LOGIN]: (state, action) => {\n        return state.set('logged', true)\n    }\n}, initialState)","import React, { Component } from 'react'\nimport Header from '../../components/common/Header/Header'\nimport { withRouter } from 'react-router-dom'\nimport * as baseActions from 'store/modules/base'\nimport { connect } from 'react-redux'\nimport { bindActionCreators } from 'redux'\n\nclass HeaderContainer extends Component {\n    handleRemove = () => {\n        const { BaseActions } = this.props\n        BaseActions.showModal('remove')\n    }\n\n    render() {\n        const { handleRemove } = this\n        const { match, logged } = this.props\n\n        const { id } = match.params\n\n        return (\n            <Header\n                postId={id}\n                logged={logged}\n                onRemove={handleRemove}\n            />\n        )\n    }\n}\n\nexport default connect(\n    (state) => ({\n        logged: state.base.get('logged')\n    }),\n    (dispatch) => ({\n        BaseActions: bindActionCreators(baseActions, dispatch)\n    })\n)(withRouter(HeaderContainer))","import React from 'react';\nimport styles from './Footer.scss';\nimport classNames from 'classnames/bind';\nimport { Link } from 'react-router-dom';\n\nconst cx = classNames.bind(styles);\n\nconst Footer = ({onLoginClick, logged}) => (\n  <footer className={cx('footer')}>\n    <Link to=\"/\" className={cx('brand')}>Eastlead</Link>\n    <div onClick={onLoginClick} className={cx('admin-login')}>\n      {logged ? 'Logout' : 'Admin Login'}\n    </div>\n  </footer>\n);\n\nexport default Footer;\n","import React, { Component } from 'react'\nimport Footer from '../../components/common/Footer/Footer'\nimport { connect } from 'react-redux'\nimport { bindActionCreators } from 'redux'\nimport * as baseActions from '../../store/modules/base'\n\nclass FooterContainer extends Component {\n    handleLoginClick = async () => {\n        const { BaseActions, logged } = this.props\n        if(logged) {\n            try {\n                await baseActions.logout()\n                window.location.reload()\n            } catch(e) {\n                console.log(e)\n            }\n            return\n        }\n        BaseActions.showModal('login')\n        BaseActions.initializeLoginModal()\n    }\n    render() {\n        const { handleLoginClick } = this\n        const { logged } = this.props\n\n        return (\n            <Footer onLoginClick={handleLoginClick} logged={logged}/>\n        )\n    }\n}\n\nexport default connect(\n    (state) => ({\n        logged: state.base.get('logged')\n    }),\n    (dispatch) => ({\n        BaseActions: bindActionCreators(baseActions, dispatch)\n    })\n)(FooterContainer)","import React, { Component } from 'react'\nimport styles from './VideoTop.scss'\nimport classNames from 'classnames/bind'\n\nconst cx = classNames.bind(styles)\n\nclass VideoTop extends Component {\n    render() {\n        return (\n            <div className={cx('video-top')}>\n                <div className={cx('iframe-container')}>\n                    <div className={cx('iframe-wrapper')}>\n                        <iframe\n                            title=\"youtube video\"\n                            frameborder=\"0\"\n                            width=\"1280\"\n                            height=\"720\"\n                            src=\"https://www.youtube.com/embed/VSN4Bz1QGrU?autoplay=1\"\n                            allow=\"autoplay\"\n                            allowFullScreen\n                        />\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default VideoTop\n","import React from 'react'\nimport styles from './PageTemplate.scss'\nimport classNames from 'classnames/bind'\nimport HeaderContainer from '../../../containers/common/HeaderContainer'\nimport FooterContainer from '../../../containers/common/FooterContainer'\nimport VideoTop from '../../../containers/VideoTop/VideoTop'\n\nconst cx = classNames.bind(styles)\n\nconst PageTemplate = ({children}) => (\n    <div className={cx('page-template')}>\n        <HeaderContainer/>\n        <VideoTop/>\n        <main>\n            {children}\n        </main>\n        <FooterContainer/>\n    </div>\n)\n\nexport default PageTemplate","import React from 'react'\nimport styles from './ListWrapper.scss'\nimport classNames from 'classnames/bind'\n\nconst cx = classNames.bind(styles)\n\nconst ListWrapper =({children}) => (\n    <div className={cx('list-wrapper')}>\n        {children}\n    </div>\n)\n\nexport default ListWrapper\n","import React from 'react'\nimport styles from './PostList.scss'\nimport classNames from 'classnames/bind'\nimport { Link } from 'react-router-dom'\nimport moment from 'moment'\nimport removeMd from 'remove-markdown'\n\nconst cx = classNames.bind(styles)\n\nconst PostItem = ({title, body, publishedDate, tags, id}) => {\n    const tagList = tags.map(\n        tag => <Link key={tag} to={`/tag/${tag}`}>#{tag}</Link>\n    )\n    return (\n        <div className={cx('post-item')}>\n            <h2><Link to={`post/${id}`}>{title}</Link></h2>\n            <div className={cx('date')}>{moment(publishedDate).format('ll')}</div>\n            <p>{removeMd(body)}</p>\n            <div className={cx('tags')}>\n                {tagList}\n            </div>\n        </div>\n    )\n}\n\nconst PostList = ({posts}) => {\n    const postList = posts.map(\n        (post) => {\n            const { _id, title, body, publishedDate, tags } = post.toJS()\n            return (\n                <PostItem\n                    title={title}\n                    body={body}\n                    publishedDate={publishedDate}\n                    tags={tags}\n                    key={_id}\n                    id={_id}\n                />\n            )\n        }\n    )\n    return (\n        <div className={cx('post-list')}>\n            {postList}\n        </div>\n    )\n}\n\nexport default PostList","import React from 'react'\nimport styles from './Pagination.scss'\nimport classNames from 'classnames/bind'\nimport Button from '../../common/Button/Button.js'\n\nconst cx = classNames.bind(styles)\n\nconst Pagination = ({page, lastPage, tag}) => {\n    const createPagePath = (page) => {\n        return tag ? `/tag/${tag}/${page}` : `/page/${page}`\n    }\n\n    return (\n        <div className={cx('pagination')}>\n            <Button disabled={page === 1} to={createPagePath(page - 1)}>\n                Previous Page\n            </Button>\n            <div className={cx('number')}>\n                Page {page}\n            </div>\n            <Button disabled={page === lastPage} to={createPagePath(page + 1)}>\n                Next Page\n            </Button>\n        </div>\n    )\n}\n\nexport default Pagination;","import { createAction, handleActions } from 'redux-actions'\n\nimport { Map, List, fromJS } from 'immutable';\nimport { pender } from 'redux-pender';\n\nimport * as api from 'lib/api'\n\n// action types\nconst GET_POST_LIST = 'list/GET_POST_LIST'\n\n// action creators\nexport const getPostList = createAction(GET_POST_LIST, api.getPostList, meta => meta)\n\n// initial state \nconst initialState = Map({\n    posts: List(),\n    lastPage: null\n});\n\n// reducer\nexport default handleActions({\n    ...pender({\n        type: GET_POST_LIST,\n        onSuccess: (state, action) => {\n            const { data: posts } = action.payload\n\n            const lastPage = action.payload.headers['last-page']\n            return state.set('posts', fromJS(posts))\n                        .set('lastPage', parseInt(lastPage, 10))\n        }\n    })\n}, initialState)","import React, { Component } from 'react'\nimport PostList from '../../components/list/PostList/PostList'\nimport Pagination from '../../components/list/Pagination/Pagination'\nimport { connect } from 'react-redux'\nimport { bindActionCreators } from 'redux'\nimport * as listActions from '../../store/modules/list'\n\nclass ListContainer extends Component {\n    getPostList = () => {\n        // Get the Page and tag value from the parent side\n        const {tag, page, ListActions } = this.props\n        ListActions.getPostList({\n            page,\n            tag\n        })\n    }\n\n    componentDidMount() {\n        this.getPostList()\n    }\n\n    componentDidUpdate(prevProps, prevState) {\n        // Call list on change with Page/tag\n        if(prevProps.page !== this.props.page || prevProps.tag !== this.props.tag) {\n            this.getPostList()\n            // Put the scrollbar on the top\n            document.documentElement.scrollTop = 0\n        }\n    }\n\n    render() {\n        const { loading, posts, page, lastPage, tag } = this.props\n        if(loading) return null // Nothing shows up during loading\n        return (\n            <div>\n                <PostList posts={posts}/>\n                <Pagination page={page} lastPage={lastPage} tag={tag}/>\n            </div>\n        )\n    }\n}\n\nexport default connect(\n    (state) => ({\n        lastPage: state.list.get('lastPage'),\n        posts: state.list.get('posts'),\n        loading: state.pender.pending['list/GET_POST_LIST']\n    }),\n    (dispatch) => ({\n        ListActions: bindActionCreators(listActions, dispatch)\n    })\n)(ListContainer)\n","import React from 'react';\nimport PageTemplate from '../components/common/PageTemplate'\nimport ListWrapper from '../containers/ListWrapper/ListWrapper'\nimport ListContainer from '../containers/list/ListContainer'\n\nconst ListPage = ({match}) => {\n    const { page = 1, tag } = match.params\n    return (\n        <PageTemplate>\n            <ListWrapper>\n                <ListContainer\n                    page={parseInt(page, 10)}\n                    tag={tag}\n                />\n            </ListWrapper>\n        </PageTemplate>\n    )\n}\n\nexport default ListPage;","import React from 'react'\nimport styles from './Postinfo.scss'\nimport classNames from 'classnames/bind'\n\nimport { Link } from 'react-router-dom'\nimport moment from 'moment'\n\nconst cx = classNames.bind(styles)\n\nconst PostInfo = ({publishedDate, title, tags}) => (\n    <div className={cx('post-info')}>\n        <div className={cx('info')}>\n            <h1>{title}</h1>\n            <div className={cx('tags')}>\n                {\n                    // Execute map on tags exsition\n                    tags && tags.map(\n                        tag => <Link key={tag} to={`/tag/${tag}`}>#{tag}</Link>\n                    )\n                }\n            </div>\n            <div className={cx('date')}>{moment(publishedDate).format('ll')}</div>\n        </div>\n    </div>\n)\n\nexport default PostInfo","import React, { Component } from 'react'\nimport styles from './MarkdownRender.scss'\nimport classNames from 'classnames/bind'\n\nimport marked from 'marked'\n\n// Call the prism code\nimport Prism from 'prismjs'\nimport 'prismjs/themes/prism-okaidia.css'\n// call the code structure\nimport 'prismjs/components/prism-bash.min.js'\nimport 'prismjs/components/prism-javascript.min.js'\nimport 'prismjs/components/prism-jsx.min.js'\nimport 'prismjs/components/prism-css.min.js'\n\nconst cx = classNames.bind(styles)\n\nexport default class MarkdownRender extends Component {\n    state = {\n        html: ''\n    }\n\n    renderMarkdown = () => {\n        const { markdown } = this.props;\n        // blank if there are no markdown\n        if(!markdown) {\n            this.setState({ html : ''})\n            return\n        }\n        this.setState({\n            html: marked(markdown, {\n                breaks: true, // new line with enter\n                sanitize: true // Rid on markdown html\n            })\n        })\n    }\n\n    constructor(props) {\n        super(props)\n        const { markdown } = props\n        // To make work markdown on serverside\n        this.state = {\n            html: markdown ? marked(props.markdown, { breaks: true, sanitize: true }) : ''\n        }\n    }    \n\n    componentDidUpdate(prevProps, prevState) {\n        // Call renderMarkdown on change with markdown\n        if(prevProps.markdown !== this.props.markdown) {\n            this.renderMarkdown()\n        }\n        // Code highlighting on change of state\n        if(prevState.html !== this.state.html) {\n            Prism.highlightAll()\n        }\n    }\n\n    componentDidMount() {\n        Prism.highlightAll()\n    }\n\n    render() {\n        const { html } = this.state\n\n        // __html setting on the html to html rendering on the React\n        const markup = {\n            __html: html\n        }\n\n        // Need to put dangerouslySetinnerHTML on the object\n        return (\n            <div className={cx('markdown-render')} dangerouslySetInnerHTML={markup}/>\n        )\n    }\n}","import React from 'react'\nimport styles from './PostBody.scss'\nimport classNames from 'classnames/bind'\nimport MarkdownRender from '../../../components/common/MarkdownRender/MarkdownRender'\n\nconst cx = classNames.bind(styles)\n\nconst PostBody = ({body}) => (\n    <div className={cx('post-body')}>\n        <div className={cx('paper')}>\n            <MarkdownRender markdown={body}/>\n        </div>\n    </div>\n)\n\nexport default PostBody","import { createAction, handleActions } from 'redux-actions'\n\nimport { Map, fromJS } from 'immutable';\nimport { pender } from 'redux-pender';\n\nimport * as api from '../../lib/api'\n\n// action types\nconst GET_POST = 'post/GET_POST'\nconst REMOVE_POST = 'post/REMOVE_POST'\n\n// action creators\nexport const getPost = createAction(GET_POST, api.getPost)\nexport const removePost = createAction(REMOVE_POST, api.removePost)\n\n// initial state \nconst initialState = Map({\n    post: Map({})\n});\n\n// reducer\nexport default handleActions({\n    ...pender({\n        type: GET_POST,\n        onSuccess: (state, action) => {\n            const { data: post } = action.payload\n            return state.set('post', fromJS(post))\n        }\n    })\n}, initialState)","import React, { Component } from 'react'\nimport PostInfo from '../../components/post/Postinfo/Postinfo'\nimport PostBody from '../../components/post/PostBody/PostBody'\nimport * as postActions from '../../store/modules/post'\nimport { connect } from 'react-redux'\nimport { bindActionCreators } from 'redux'\n\nclass Post extends Component {\n    initialize = async () => {\n        const { PostActions, id } = this.props\n        try {\n            await PostActions.getPost(id)\n        } catch(e) {\n            console.log(e)\n        }\n    }\n\n    componentDidMount() {\n        this.initialize()\n    }\n\n    render() {\n        const { loading, post } = this.props\n\n        if(loading) return null // Nothing shows on loading\n\n        const { title, body, publishedDate, tags } = post.toJS()\n\n        return (\n            <div>\n                <PostInfo title={title} publishedDate={publishedDate} tags={tags}/>\n                <PostBody body={body}/>\n            </div>\n        )\n    }\n}\n\nexport default connect(\n    (state) => ({\n        post: state.post.get('post'),\n        loading: state.pender.pending['post/GET_POST'] //loading\n    }),\n    (dispatch) => ({\n        PostActions: bindActionCreators(postActions, dispatch)\n    })\n)(Post)","import React, { Component } from 'react'\nimport styles from './ModalWrapper.scss'\nimport classNames from 'classnames/bind'\n\nconst cx = classNames.bind(styles)\n\nexport default class ModalWrapper extends Component {\n    state = {\n        animate: false\n    }\n\n    startAnimations = () => {\n        // Set animate value true\n        this.setState({\n            animate: true\n        })\n        // Set false after 250ms\n        setTimeout(() => {\n            this.setState({\n                animate: false\n            })\n        }, 250)\n    }\n\n    componentDidUpdate(prevProps, prevState) {\n        if(prevProps.visible !== this.props.visible) {\n            this.startAnimations()\n        }\n    }\n\n    render() {\n        const { children, visible } = this.props\n        const { animate } = this.state;\n\n        // Only both of visible and animate is false\n        // return null\n        if(!visible && !animate) return null\n\n        // Set animation on state\n        const animation = animate && (visible ? 'enter' : 'leave')\n        return (\n            <div>\n                <div className={cx('gray-background', animation)}/>\n                <div className={cx('modal-wrapper')}>\n                    <div className={cx('modal', animation)}>\n                        {children}\n                    </div>\n                </div>\n            </div>    \n        )\n    }\n}","import React from 'react'\nimport styles from './AskRemoveModal.scss'\nimport classNames from 'classnames/bind'\nimport ModalWrapper from '../ModalWrapper/ModalWrapper'\nimport Button from '../../common/Button/Button'\n\nconst cx = classNames.bind(styles)\n\nconst AskRemoveModal = ({visible, onConfirm, onCancel}) => (\n    <ModalWrapper visible={visible}>\n        <div className={cx('question')}>\n            <div className={cx('title')}>Remove Post</div>\n            <div className={cx('description')}>Do you want to delete the Post?</div>\n        </div>\n        <div className={cx('options')}>\n            <Button theme=\"gray\" onClick={onCancel}>Cancel</Button>\n            <Button onClick={onConfirm}>Remove</Button>\n        </div>\n    </ModalWrapper>\n)\n\nexport default AskRemoveModal","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { bindActionCreators } from 'redux'\nimport * as baseActions from 'store/modules/base'\nimport * as postActions from 'store/modules/post'\nimport AskRemoveModal from '../../components/modal/AskRemoveModal/AskRemoveModal'\nimport { withRouter } from 'react-router-dom'\n\nclass AskRemoveModalContainer extends Component {\n    handleCancel = () => {\n        const { BaseActions } = this.props\n        BaseActions.hideModal('remove')\n    }\n\n    handleConfirm = async () => {\n        const { BaseActions, PostActions, history, match } = this.props\n        const { id } = match.params\n\n        try {\n            // After deleting post, turn off the modal and move to website\n            await PostActions.removePost(id)\n            BaseActions.hideModal('remove')\n            history.push('/')\n        } catch(e) {\n            console.log(e)\n        }\n    }\n\n    render() {\n        const { visible } = this.props\n        const { handleCancel, handleConfirm } = this\n\n        return (\n            <AskRemoveModal \n                visible={visible} \n                onCancel={handleCancel}\n                onConfirm={handleConfirm}\n            />\n        )\n    }\n}\n\nexport default connect(\n    (state) => ({\n        visible: state.base.getIn(['modal', 'remove'])\n    }),\n    (dispatch) => ({\n        BaseActions: bindActionCreators(baseActions, dispatch),\n        PostActions: bindActionCreators(postActions, dispatch)\n    })\n)(withRouter(AskRemoveModalContainer))","import React from 'react'\nimport PageTemplate from '../components/common/PageTemplate'\nimport Post from '../containers/post/Post'\nimport AskRemoveModalContainer from '../containers/modal/AskRemoveModalcontainer'\n\nconst PostPage = ({match}) => {\n    const { id } = match.params\n    return (\n        <PageTemplate>\n            <Post id={id} />\n            <AskRemoveModalContainer/>\n        </PageTemplate>\n    )\n}\n\nexport default PostPage;","import React, { Component } from 'react'\nimport styles from './EditorTemplate.scss'\nimport classNames from 'classnames/bind'\n\nconst cx = classNames.bind(styles)\n\nclass EditorTemplate extends Component {\n    state = {\n        leftPercentage: 0.5\n    }\n\n    // leftPercentage update on mouse click\n    handleMouseMove = (e) => {\n        this.setState({\n            leftPercentage: e.clientX / window.innerWidth\n        })\n    }\n\n    // Get rid of the event on Mouse out\n    handleMouseUp = (e) => {\n        document.body.removeEventListener('mousemove', this.handleMouseMove)\n        window.removeEventListener('mouseup', this.handleMouseUp)\n    }\n\n    // On click the separator\n    handleSeparatorMouseDown = (e) => {\n        document.body.addEventListener('mousemove', this.handleMouseMove)\n        window.addEventListener('mouseup', this.handleMouseUp)\n    }\n    render() {\n        const { header, editor, preview } = this.props\n        const { leftPercentage } = this.state\n        const { handleSeparatorMouseDown } = this\n\n        // Flex on the each area\n        const leftStyle = {\n            flex: leftPercentage\n        }\n        const rightStyle = {\n            flex: 1 - leftPercentage\n        }\n\n        // setting the separator location\n        const separatorStyle = {\n            left: `${leftPercentage * 100}%`\n        }\n\n        return (\n            <div className={cx('editor-template')}>\n                {header}\n                <div className={cx('panes')}>\n                    <div className={cx('pane', 'editor')} style={leftStyle}>\n                        {editor}\n                    </div>\n                    <div className={cx('pane', 'preview')} style={rightStyle}>\n                        {preview}\n                    </div>\n                <div\n                    className={cx('separator')}\n                    style={separatorStyle}\n                    onMouseDown={handleSeparatorMouseDown}/>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default EditorTemplate","import React from 'react'\nimport styles from './EditorHeader.scss'\nimport classNames from 'classnames/bind'\nimport Button from '../../common/Button/Button'\n\nconst cx = classNames.bind(styles)\n\nconst EditorHeader = ({onGoBack, onSubmit, isEdit}) => {\n    return (\n        <div className={cx('editor-header')}>\n            <div className={cx('back')}>\n                <Button onClick={onGoBack} theme=\"outline\">Go back</Button>\n            </div>\n            <div className={cx('submit')}>\n                <Button onClick={onSubmit} theme=\"outline\">{isEdit ? 'Edit' : 'Submit'}</Button>\n            </div>\n        </div>\n    )\n}\n\nexport default EditorHeader","import React, { Component } from 'react'\nimport styles from './EditorPane.scss'\nimport classNames from 'classnames/bind'\n\nimport CodeMirror from 'codemirror'\n\nimport 'codemirror/mode/markdown/markdown' // Color for the markdown \n// Code color in the markdown\nimport 'codemirror/mode/javascript/javascript';\nimport 'codemirror/mode/jsx/jsx'\nimport 'codemirror/mode/css/css'\nimport 'codemirror/mode/shell/shell'\n\n// Css style for the CodeMirror\nimport 'codemirror/lib/codemirror.css'\nimport 'codemirror/theme/monokai.css'\n\nconst cx = classNames.bind(styles)\n\nexport default class EditorPane extends Component {\n\n    editor = null // Editor ref\n    codeMirror = null // CodeMirror instance\n    cursor = null // Cursor location on the editor text\n\n    initializeEditor = () => {\n        this.codeMirror = CodeMirror(this.editor, {\n            mode: 'markdown',\n            theme: 'monokai',\n            lineNumbers: true, // Put line number on left line\n            lineWrapping: true // If it is too long write on next line\n        })\n        this.codeMirror.on('change', this.handleChangeMarkdown)\n    }\n\n    componentDidMount() {\n        this.initializeEditor();\n    }\n\n    handleChange = (e) => {\n        const { onChangeInput } = this.props\n        const { value, name } = e.target\n        onChangeInput({name, value})\n    }\n\n    handleChangeMarkdown = (doc) => {\n        const { onChangeInput } = this.props\n        this.cursor = doc.getCursor() // Save text cursor location\n        onChangeInput({\n            name: 'markdown',\n            value: doc.getValue()\n        })\n    }\n\n    componentDidUpdate(prevProps, prevState) {\n        // Editor change on markdown change\n        // Because text cursor location has initialised\n        // Set location on the saved cursor \n        if(prevProps.markdown !== this.props.markdown) {\n            const { codeMirror, cursor } = this\n            if(!codeMirror) return // Before instance created\n            codeMirror.setValue(this.props.markdown)\n            if(!cursor) return\n            codeMirror.setCursor(cursor)\n        }\n    }\n\n    render() {\n        const { handleChange } = this\n        const { tags, title } = this.props\n        \n        return (\n            <div className={cx('editor-pane')}>\n                <input \n                    className={cx('title')} \n                    placeholder=\"Write the title\" \n                    name=\"title\"\n                    value={title}\n                    onChange={handleChange}\n                />\n                <div className={cx('code-editor')} ref={ref => this.editor=ref}></div>\n                <div className={cx('tags')}>\n                    <div className={cx('description')}>Tag</div>\n                    <input \n                        name=\"tags\" \n                        placeholder=\"Input the tag (seperate with ,)\"\n                        value={tags}\n                        onChange={handleChange}\n                    />\n                </div>\n            </div>\n        )\n    }\n}","import { createAction, handleActions } from 'redux-actions'\nimport * as api from '../../lib/api'\n\nimport { Map } from 'immutable'\nimport { pender } from 'redux-pender'\n\n// action types\nconst INITIALIZE = 'editor/INITIALIZE'\nconst CHANGE_INPUT = 'editor/CHANGE_INPUT'\nconst WRITE_POST = 'editor/WRITE_POST'\nconst GET_POST = 'editor/GET_POST'\nconst EDIT_POST = 'editor/EDIT_POST'\n\n// action creators\nexport const initialize = createAction(INITIALIZE)\nexport const changeInput = createAction(CHANGE_INPUT)\nexport const writePost = createAction(WRITE_POST, api.writePost)\nexport const getPost = createAction(GET_POST, api.getPost)\nexport const editPost = createAction(EDIT_POST, api.editPost)\n\n// initial state \nconst initialState = Map({\n    title: '',\n    markdown: '',\n    tags: '',\n    postId: null\n});\n\n// reducer\nexport default handleActions({\n    [INITIALIZE]: (state, action) => initialState,\n    [CHANGE_INPUT]: (state, action) => {\n        const {name, value } = action.payload;\n        return state.set(name, value);\n    },\n    ...pender({\n        type: WRITE_POST,\n        onSuccess: (state, action) => {\n            const { _id } = action.payload.data;\n            return state.set('postId', _id)\n        }\n    }),\n    ...pender({\n        type: GET_POST,\n        onSuccess: (state, action) => {\n            const { title, tags, body } = action.payload.data\n            return state.set('title', title)\n                        .set('markdown', body)\n                        .set('tags', tags.join(', ')) // array -> string can classify with ,\n        }\n    })\n}, initialState)","import React, { Component } from 'react'\nimport EditorPane from '../../components/editor/EditorPane/EditorPane' \nimport { bindActionCreators } from 'redux'\nimport { connect } from 'react-redux'\nimport * as editorActions from '../../store/modules/editor'\n\nclass EditorPaneContainer extends Component {\n\n    handleChangeInput = ({name, value}) => {\n        const { EditorActions } = this.props\n        EditorActions.changeInput({name, value})\n    }\n\n    render() {\n        const { title, tags, markdown } = this.props;\n        const { handleChangeInput } = this\n        \n        return (\n            <EditorPane\n                title={title}\n                markdown={markdown}\n                tags={tags}\n                onChangeInput={handleChangeInput}\n            />\n        )\n    }\n}\n\nexport default connect(\n    (state) => ({\n        title: state.editor.get('title'),\n        markdown: state.editor.get('markdown'),\n        tags: state.editor.get('tags')\n    }),\n    (dispatch) => ({\n        EditorActions: bindActionCreators(editorActions, dispatch)\n    })\n)(EditorPaneContainer)","import React from 'react'\nimport styles from './PreviewPane.scss'\nimport classNames from 'classnames/bind'\nimport MarkdownRender from '../../common/MarkdownRender/MarkdownRender'\n\nconst cx = classNames.bind(styles)\n\nconst PreviewPane = ({markdown, title}) => (\n    <div className={cx('preview-pane')}>\n        <h1 className={cx('title')}>\n            {title}\n        </h1>\n        <div>\n            <MarkdownRender markdown={markdown}/>\n        </div>\n    </div>\n)\n\nexport default PreviewPane","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport PreviewPane from '../../components/editor/PreviewPane/PreviewPane'\n\nclass PreviewPaneContainer extends Component {\n    render() {\n        const { markdown, title } = this.props\n        return (\n            <PreviewPane title={title} markdown={markdown}/>\n        )\n    }\n}\n\nexport default connect(\n    (state) => ({\n        title: state.editor.get('title'),\n        markdown: state.editor.get('markdown')\n    })\n)(PreviewPaneContainer)","import React, { Component } from 'react'\nimport EditorHeader from '../../components/editor/EditorHeader/EditorHeader'\nimport { connect } from 'react-redux'\nimport { bindActionCreators } from 'redux'\nimport { withRouter } from 'react-router-dom'\n\nimport * as editorActions from '../../store/modules/editor'\n\nimport queryString from 'query-string'\n\nclass EditorHeaderContainer extends Component {\n    componentDidMount() {\n        const { EditorActions, location } = this.props;\n        EditorActions.initialize() // initialize editor\n\n        // query parsing\n        const { id } = queryString.parse(location.search)\n        if(id) {\n            // Post when id exist\n            EditorActions.getPost(id)\n        }\n    }\n\n    handleGoback = () => {\n        const { history } = this.props\n        history.goBack()\n    }\n\n    handleSubmit = async () => {\n        const { title, markdown, tags, EditorActions, history, location } = this.props\n        const post = {\n            title,\n            body: markdown,\n            // Eliminate duplications and divide tag text with ,\n            tags: tags === \"\" ?[]:[...new Set(tags.split(',').map(tag => tag.trim()))]\n        }\n        try {\n            // Call editPost if id exist\n            const { id } = queryString.parse(location.search)\n            if(id) {\n                await EditorActions.editPost({id, ...post})\n                history.push(`/post/${id}`)\n                return\n            }\n            await EditorActions.writePost(post);\n            // move the page. caution: postId don't make reference on top need to search this.props.postId in this site\n            history.push(`/post/${this.props.postId}`)\n        } catch(e) {\n            console.log(e)\n        }\n    }\n\n    render() {\n        const { handleGoback, handleSubmit } = this\n        const { id } = queryString.parse(this.props.location.search)\n        return (\n            <EditorHeader\n                onGoBack={handleGoback}\n                onSubmit={handleSubmit}\n                isEdit={id ? true : false}\n            />\n        )\n    }\n}\n\nexport default connect(\n    (state) => ({\n        title: state.editor.get('title'),\n        markdown: state.editor.get('markdown'),\n        tags: state.editor.get('tags'),\n        postId: state.editor.get('postId')\n    }),\n    (dispatch) => ({\n        EditorActions: bindActionCreators(editorActions, dispatch)\n    })\n)(withRouter(EditorHeaderContainer))","import React from 'react';\nimport EditorTemplate from '../components/editor/EditorTemplate/EditorTemplate'\nimport EditorHeader from '../components/editor/EditorHeader/EditorHeader'\nimport EditorPaneContainer from '../containers/editor/EditorPaneContainer'\nimport PreviewPaneContainer from '../containers/editor/PreviewPaneContainer';\nimport EditorHeaderContainer from '../containers/editor/EditorHeaderContainer'\n\nconst EditorPage = () => {\n    return (\n        <EditorTemplate\n            header={<EditorHeaderContainer/>}\n            editor={<EditorPaneContainer/>}\n            preview={<PreviewPaneContainer/>}\n        />\n    )\n}\n\nexport default EditorPage;","import React from 'react';\n\nconst NotFoundPage = () => {\n    return (\n        <div>\n            NotFound\n        </div>\n    )\n}\n\nexport default NotFoundPage;","import React from 'react'\nimport styles from './LoginModal.scss'\nimport classNames from 'classnames/bind'\nimport ModalWrapper from '../ModalWrapper/ModalWrapper'\n\nconst cx = classNames.bind(styles)\n\nconst LoginModal = ({\n    visible, password, error, onCancel, onLogin, onChange, onKeyPress\n}) => (\n    <ModalWrapper visible={visible}>\n        <div className={cx('form')}>\n            <div onClick={onCancel} className={cx('close')}>&times;</div>\n            <div className={cx('title')}>Login</div>\n            <div className={cx('description')}>Please enter your password</div>\n            <input autoFocus type=\"password\" placeholder=\"input password\" value={password} onChange={onChange} onKeyPress={onKeyPress}/>\n            { error && <div className={cx('error')}>Login failed</div> }\n            <div className={cx('login')} onClick={onLogin}>Login</div>\n        </div>\n    </ModalWrapper>\n)\n\nexport default LoginModal","import React, { Component } from 'react'\nimport LoginModal from '../../components/modal/LoginModal/LoginModal'\nimport { connect } from 'react-redux'\nimport { bindActionCreators } from 'redux'\nimport * as baseActions from '../../store/modules/base'\n\nclass LoginModalContainer extends Component {\n    handleLogin = async () => {\n        const { BaseActions, password } = this.props\n        try {\n            // Login, on sucess => close modal\n            await BaseActions.login(password)\n            BaseActions.hideModal('login')\n            localStorage.logged = \"true\"\n        } catch(e) {\n            console.log(e)\n        }\n\n    }\n    handleCancel = () => {\n        const { BaseActions } = this.props\n        BaseActions.hideModal('login')\n    }\n    handleChange = (e) => {\n        const { BaseActions } = this.props\n        const { value } = e.target\n        BaseActions.changePasswordInput(value)\n    }\n    handleKeyPress = (e) => {\n        // Login on enter key\n        if(e.key === 'Enter') {\n            this.handleLogin()\n        }\n    }\n    render() {\n        const {\n            handleLogin, handleCancel, handleChange, handleKeyPress\n        } = this\n        const { visible, error, password } = this.props\n\n        return (\n            <LoginModal\n                onLogin={handleLogin} onCancel={handleCancel}\n                onChange={handleChange} onKeyPress={handleKeyPress}\n                visible={visible} error={error} password={password}\n            />\n        )\n    }\n}\n\nexport default connect(\n    (state) => ({\n        visible: state.base.getIn(['modal', 'login']),\n        password: state.base.getIn(['loginModal', 'password']),\n        error: state.base.getIn(['loginModal', 'error'])\n    }),\n    (dispatch) => ({\n        BaseActions: bindActionCreators(baseActions, dispatch)\n    })\n)(LoginModalContainer)","import React, { Component } from 'react'\nimport LoginModalContainer from '../modal/LoginModalContainer'\nimport { connect } from 'react-redux'\nimport { bindActionCreators } from 'redux'\nimport * as baseActions from '../../store/modules/base'\n\nclass Base extends Component {\n    initialize = async () => {\n        const { BaseActions } = this.props\n        if(localStorage.logged === \"true\") {\n            BaseActions.tempLogin()\n        }\n        BaseActions.checkLogin()\n    }\n    comoponentDidMount() {\n        this.initialize()\n    }\n    render() {\n        return (\n            <div>\n                <LoginModalContainer/>\n                {/* rendering components on global scope */}\n            </div>\n        )\n    }\n}\n\nexport default connect(\n    null,\n    (dispatch) => ({\n        BaseActions: bindActionCreators(baseActions, dispatch)\n    })\n)(Base)","import React from 'react';\nimport { Switch, Route } from 'react-router-dom';\nimport { ListPage, PostPage, EditorPage, NotFoundPage } from '../pages';\nimport Base from 'containers/common/Base'\n\nconst App = () => {\n    return (\n        <div>\n            <Switch>\n                <Route exact path=\"/\" component={ListPage}/>\n                <Route path=\"/page/:page\" component={ListPage}/>\n                <Route path=\"/tag/:tag/:page?\" component={ListPage}/>\n                <Route path=\"/post/:id\" component={PostPage}/>\n                <Route path=\"/editor\" component={EditorPage}/>\n                <Route component={NotFoundPage}/>\n            </Switch>\n            <Base/>\n        </div>\n    );\n};\n\nexport default App","import { createStore, applyMiddleware, compose, combineReducers } from 'redux';\nimport penderMiddleware from 'redux-pender';\nimport * as modules from './modules'\n\nconst reducers = combineReducers(modules);\nconst middlewares = [penderMiddleware()];\n\n// Apply Redux Devtools only on Dev mode\nconst isDev = process.env.NODE_ENV === 'developement';\nconst devtools = isDev && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__;\nconst composeEnhancers = devtools || compose;\n\n// preloadedState is initial state after rendering serverside\nconst configure = (preloadedState) => createStore(reducers, preloadedState, composeEnhancers(applyMiddleware(...middlewares)));\n\nexport default configure;","import React from 'react';\nimport { BrowserRouter } from 'react-router-dom';\nimport App from './components/App';\nimport { Provider } from 'react-redux';\nimport configure from './store/configure'\n\nconst store = configure();\n\nconst Root = () => {\n    return (\n        <Provider store = { store }>\n            <BrowserRouter>\n                <App/>\n            </BrowserRouter>\n        </Provider>\n    );\n}\n\nexport default Root","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6  address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Root from './Root';\nimport * as serviceWorker from './serviceWorker';\nimport 'styles/base.scss';\n\nReactDOM.render( <Root />, document.getElementById( 'root' ) );\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}