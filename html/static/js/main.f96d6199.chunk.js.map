{"version":3,"sources":["components/common/Button/Button.js","components/common/Header/Header.js","lib/api.js","store/modules/base.js","containers/common/HeaderContainer.js","components/common/Footer/Footer.js","containers/common/FooterContainer.js","components/common/PageTemplate/PageTemplate.js","containers/ListWrapper/ListWrapper.js","components/list/PostList/PostList.js","components/list/Pagination/Pagination.js","store/modules/list.js","containers/list/ListContainer.js","containers/VideoTop/VideoTop.js","pages/ListPage.js","components/post/Postinfo/Postinfo.js","components/common/MarkdownRender/MarkdownRender.js","components/post/PostBody/PostBody.js","store/modules/post.js","containers/post/Post.js","components/modal/ModalWrapper/ModalWrapper.js","components/modal/AskRemoveModal/AskRemoveModal.js","containers/modal/AskRemoveModalcontainer.js","pages/PostPage.js","components/editor/EditorTemplate/EditorTemplate.js","components/editor/EditorHeader/EditorHeader.js","components/editor/EditorPane/EditorPane.js","store/modules/editor.js","containers/editor/EditorPaneContainer.js","components/editor/PreviewPane/PreviewPane.js","containers/editor/PreviewPaneContainer.js","containers/editor/EditorHeaderContainer.js","pages/EditorPage.js","pages/NotFoundPage.js","components/modal/LoginModal/LoginModal.js","containers/modal/LoginModalContainer.js","containers/common/Base.js","components/App.js","store/configure.js","Root.js","serviceWorker.js","index.js","lib/img/eastlead_profile.jpg"],"names":["cx","classNames","bind","styles","Div","_ref","children","rest","Object","objectWithoutProperties","react_default","a","createElement","Button","_ref2","to","onClick","disabled","_ref2$theme","theme","Element","Link","className","Header","postId","logged","onRemove","src","require","alt","react_router_dom","common_Button_Button","key","concat","PORT","getPost","id","axios","get","showModal","createAction","hideModal","login","password","post","logout","checkLogin","changePasswordInput","initializeLoginModal","tempLogin","initialState","Map","modal","remove","loginModal","error","handleActions","_objectSpread","_objectSpread2","defineProperty","state","action","modalName","payload","setIn","pender","type","onSuccess","set","onError","data","_objectSpread3","value","HeaderContainer","handleRemove","_this","props","BaseActions","this","_this$props","match","params","common_Header_Header","Component","connect","base","dispatch","bindActionCreators","baseActions","withRouter","Footer","onLoginClick","FooterContainer","handleLoginClick","regenerator_default","async","_context","prev","next","awrap","window","location","reload","t0","console","log","abrupt","stop","common_Footer_Footer","PageTemplate","common_HeaderContainer","common_FooterContainer","ListWrapper","PostItem","title","body","publishedDate","tags","tagList","map","tag","moment","format","removeMd","PostList","postList","posts","_post$toJS","toJS","_id","PostList_PostItem","Pagination","page","lastPage","createPagePath","getPostList","queryString","stringify","meta","List","list_objectSpread","headers","fromJS","parseInt","ListContainer","ListActions","prevProps","prevState","document","documentElement","scrollTop","_this$props2","loading","list_PostList_PostList","list_Pagination_Pagination","list","pending","listActions","VideoTop","frameborder","width","height","allow","allowFullScreen","ListPage","_match$params","_match$params$page","common_PageTemplate_PageTemplate","containers_VideoTop_VideoTop","containers_ListWrapper_ListWrapper","list_ListContainer","PostInfo","MarkdownRender","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","html","renderMarkdown","markdown","setState","marked","breaks","sanitize","Prism","highlightAll","markup","__html","dangerouslySetInnerHTML","PostBody","MarkdownRender_MarkdownRender_MarkdownRender","api","removePost","delete","post_objectSpread","Post","initialize","PostActions","Postinfo_Postinfo","post_PostBody_PostBody","postActions","ModalWrapper","animate","startAnimations","setTimeout","visible","animation","AskRemoveModal","onConfirm","onCancel","ModalWrapper_ModalWrapper_ModalWrapper","AskRemoveModalContainer","handleCancel","handleConfirm","history","push","modal_AskRemoveModal_AskRemoveModal","getIn","PostPage","post_Post","AskRemoveModalcontainer","EditorTemplate","leftPercentage","handleMouseMove","e","clientX","innerWidth","handleMouseUp","removeEventListener","handleSeparatorMouseDown","addEventListener","header","editor","preview","leftStyle","flex","rightStyle","separatorStyle","left","style","onMouseDown","EditorHeader","onGoBack","onSubmit","isEdit","EditorPane","codeMirror","cursor","initializeEditor","CodeMirror","mode","lineNumbers","lineWrapping","on","handleChangeMarkdown","handleChange","onChangeInput","_e$target","target","name","doc","getCursor","getValue","setValue","setCursor","_this2","placeholder","onChange","ref","changeInput","writePost","editPost","_ref3","patch","editor_objectSpread","editor_objectSpread2","_action$payload","_action$payload$data","join","EditorPaneContainer","handleChangeInput","EditorActions","EditorPane_EditorPane_EditorPane","editorActions","PreviewPane","PreviewPaneContainer","editor_PreviewPane_PreviewPane","EditorHeaderContainer","handleGoback","goBack","handleSubmit","_queryString$parse","toConsumableArray","Set","split","trim","parse","search","EditorHeaderContainer_objectSpread","editor_EditorHeader_EditorHeader","EditorPage","editor_EditorTemplate_EditorTemplate","editor_EditorHeaderContainer","editor_EditorPaneContainer","editor_PreviewPaneContainer","NotFoundPage","LoginModal","onLogin","onKeyPress","autoFocus","LoginModalContainer","handleLogin","localStorage","handleKeyPress","modal_LoginModal_LoginModal","Base","modal_LoginModalContainer","App","react_router","exact","path","component","common_Base","reducers","combineReducers","modules","middlewares","penderMiddleware","composeEnhancers","compose","store","preloadedState","createStore","applyMiddleware","apply","configure","Root","es","components_App","Boolean","hostname","ReactDOM","render","src_Root","getElementById","navigator","serviceWorker","ready","then","registration","unregister","module","exports","__webpack_require__","p"],"mappings":"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","file":"static/js/main.f96d6199.chunk.js","sourcesContent":["import React from 'react';\nimport styles from './Button.scss';\nimport classNames from 'classnames/bind';\nimport { Link } from 'react-router-dom';\n\nconst cx = classNames.bind(styles);\n\n// All the values from className, onClick is on the rest\n// On JSX if you use ..., you will get to the props\nconst Div = ({children, ...rest}) => <div {...rest}>{children}</div>\n\nconst Button = ({\n    children, to, onClick, disabled, theme = 'default',\n  }) => {\n    // Use Link on existence of to, otherwise use div\n    // Use div even on the disabled\n    const Element = (to && !disabled) ? Link : Div;\n\n    // onClick will not \n    return (\n        <Element\n            to={to}\n            className={cx('button', theme, {disabled})}\n            onClick={disabled ? () => null : onClick}>\n            {children}\n        </Element>\n    )\n}\n\nexport default Button","import React from 'react';\nimport styles from './Header.scss';\nimport classNames from 'classnames/bind';\nimport { Link } from 'react-router-dom';\nimport Button from '../Button/Button.js';\n\nconst cx = classNames.bind(styles);\n\nconst Header = ({postId, logged, onRemove}) => (\n  <header className={cx('header')}>\n    <div className={cx('header-content')}>\n      <div className={cx('brand')}>\n        <div className={cx('profile-photo')}>\n          <img src={require('lib/img/eastlead_profile.jpg')} alt=\"profile\" />\n        </div>\n        <Link to=\"/\">Eastlead</Link>\n      </div>\n      { logged &&\n      <div className={cx('right')}>\n        {\n          // Rendering array to keep flex\n          postId && [\n            <Button key=\"edit\" theme=\"outline\" to={`/editor?id=${postId}`}>edit</Button>,\n            <Button key=\"remove\" theme=\"outline\" onClick={onRemove}>remove</Button>\n          ]\n        }\n        <Button theme=\"outline\" to=\"/editor\">New Post</Button>\n      </div> }\n    </div>\n  </header>\n);\n\nexport default Header;","import axios from 'axios'\nimport queryString from 'query-string'\nconst PORT = 'http://ec2-3-17-61-152.us-east-2.compute.amazonaws.com:4000';\nexport const writePost = ({title, body, tags}) => axios.post(`${PORT}/api/posts`, {title, body, tags})\nexport const getPost = (id) => axios.get(`${PORT}/api/posts/${id}`)\nexport const getPostList = ({tag, page}) => axios.get(`${PORT}/api/posts/?${queryString.stringify({tag, page})}`)\nexport const editPost = ({id, title, body, tags}) => axios.patch(`${PORT}/api/posts/${id}`, {title, body, tags})\nexport const removePost = (id) => axios.delete(`${PORT}/api/posts/${id}`)\nexport const login = (password) => axios.post(`${PORT}/api/auth/login`, { password })\nexport const checkLogin = () => axios.get(`${PORT}/api/auth/check`)\nexport const logout = () => axios.post(`${PORT}/api/auth/logout`)","import { createAction, handleActions } from 'redux-actions'\n\nimport { Map } from 'immutable';\nimport { pender } from 'redux-pender';\nimport * as api from '../../lib/api'\n\n// action types\nconst SHOW_MODAL = 'base/SHOW_MODAL'\nconst HIDE_MODAL = 'base/HIDE_MODAL'\nconst LOGIN = 'base/LOGIN'\nconst LOGOUT = 'base/LOGOUT'\nconst CHECK_LOGIN = 'base/CHECK_LOGIN'\nconst CHANGE_PASSWORD_INPUT = 'base/CHANGE_PASSWORD_INPUT'\nconst INITIALIZE_LOGIN_MODAL = 'base/INITIALIZE_LOGIN_MODAL'\nconst TEMP_LOGIN = 'base/TEMP_LOGIN'\n\n// action creators\nexport const showModal = createAction(SHOW_MODAL)\nexport const hideModal = createAction(HIDE_MODAL)\nexport const login = createAction(LOGIN, api.login)\nexport const logout = createAction(LOGOUT, api.logout)\nexport const checkLogin = createAction(CHECK_LOGIN, api.checkLogin)\nexport const changePasswordInput = createAction(CHANGE_PASSWORD_INPUT)\nexport const initializeLoginModal = createAction(INITIALIZE_LOGIN_MODAL)\nexport const tempLogin = createAction(TEMP_LOGIN)\n\n// initial state \nconst initialState = Map({\n    // Modal's visualisation state\n    modal: Map({\n        remove: false,\n        login: false // Login Modal which will be modified after\n    }),\n    // Login Modal status\n    loginModal: Map({\n        password: '',\n        error: false\n    }),\n    logged: false // Login status\n});\n\n// reducer\nexport default handleActions({\n    [SHOW_MODAL]: (state, action) => {\n        const { payload: modalName } = action\n        return state.setIn(['modal', modalName], true)\n    },\n    [HIDE_MODAL]: (state, action) => {\n        const { payload: modalName } = action\n        return state.setIn(['modal', modalName], false)\n    },\n    ...pender({\n        type: LOGIN,\n        onSuccess: (state, action) => { // On login success\n            return state.set('logged', true)\n        },\n        onError: (state, action) => { // On error occur\n            return state.setIn(['loginModal', 'error'], true)\n                        .setIn(['loginModal', 'password'], '')\n        }\n    }), \n    ...pender({\n        type: CHECK_LOGIN,\n        onSuccess: (state, action) => {\n            const { logged } = action.payload.data\n            return state.set('logged', logged)\n        }\n    }),\n    [CHANGE_PASSWORD_INPUT]: (state, action) => {\n        const { payload: value } = action\n        return state.setIn(['loginModal', 'password'], value)\n    },\n    [INITIALIZE_LOGIN_MODAL]: (state, action) => {\n        // Set modal to initial status\n        return state.set('loginModal', initialState.get('loginModal'))\n    },\n    [TEMP_LOGIN]: (state, action) => {\n        return state.set('logged', true)\n    }\n}, initialState)","import React, { Component } from 'react'\nimport Header from '../../components/common/Header/Header'\nimport { withRouter } from 'react-router-dom'\nimport * as baseActions from 'store/modules/base'\nimport { connect } from 'react-redux'\nimport { bindActionCreators } from 'redux'\n\nclass HeaderContainer extends Component {\n    handleRemove = () => {\n        const { BaseActions } = this.props\n        BaseActions.showModal('remove')\n    }\n\n    render() {\n        const { handleRemove } = this\n        const { match, logged } = this.props\n\n        const { id } = match.params\n\n        return (\n            <Header\n                postId={id}\n                logged={logged}\n                onRemove={handleRemove}\n            />\n        )\n    }\n}\n\nexport default connect(\n    (state) => ({\n        logged: state.base.get('logged')\n    }),\n    (dispatch) => ({\n        BaseActions: bindActionCreators(baseActions, dispatch)\n    })\n)(withRouter(HeaderContainer))","import React from 'react';\nimport styles from './Footer.scss';\nimport classNames from 'classnames/bind';\nimport { Link } from 'react-router-dom';\n\nconst cx = classNames.bind(styles);\n\nconst Footer = ({onLoginClick, logged}) => (\n  <footer className={cx('footer')}>\n    <Link to=\"/\" className={cx('brand')}>Eastlead</Link>\n    <div onClick={onLoginClick} className={cx('admin-login')}>\n      {logged ? 'Logout' : 'Admin Login'}\n    </div>\n  </footer>\n);\n\nexport default Footer;\n","import React, { Component } from 'react'\nimport Footer from '../../components/common/Footer/Footer'\nimport { connect } from 'react-redux'\nimport { bindActionCreators } from 'redux'\nimport * as baseActions from '../../store/modules/base'\n\nclass FooterContainer extends Component {\n    handleLoginClick = async () => {\n        const { BaseActions, logged } = this.props\n        if(logged) {\n            try {\n                await baseActions.logout()\n                window.location.reload()\n            } catch(e) {\n                console.log(e)\n            }\n            return\n        }\n        BaseActions.showModal('login')\n        BaseActions.initializeLoginModal()\n    }\n    render() {\n        const { handleLoginClick } = this\n        const { logged } = this.props\n\n        return (\n            <Footer onLoginClick={handleLoginClick} logged={logged}/>\n        )\n    }\n}\n\nexport default connect(\n    (state) => ({\n        logged: state.base.get('logged')\n    }),\n    (dispatch) => ({\n        BaseActions: bindActionCreators(baseActions, dispatch)\n    })\n)(FooterContainer)","import React from 'react'\nimport styles from './PageTemplate.scss'\nimport classNames from 'classnames/bind'\nimport HeaderContainer from '../../../containers/common/HeaderContainer'\nimport FooterContainer from '../../../containers/common/FooterContainer'\n\nconst cx = classNames.bind(styles)\n\nconst PageTemplate = ({children}) => (\n    <div className={cx('page-template')}>\n        <HeaderContainer/>\n        <main>\n            {children}\n        </main>\n        <FooterContainer/>\n    </div>\n)\n\nexport default PageTemplate","import React from 'react'\nimport styles from './ListWrapper.scss'\nimport classNames from 'classnames/bind'\n\nconst cx = classNames.bind(styles)\n\nconst ListWrapper =({children}) => (\n    <div className={cx('list-wrapper')}>\n        {children}\n    </div>\n)\n\nexport default ListWrapper\n","import React from 'react'\nimport styles from './PostList.scss'\nimport classNames from 'classnames/bind'\nimport { Link } from 'react-router-dom'\nimport moment from 'moment'\nimport removeMd from 'remove-markdown'\n\nconst cx = classNames.bind(styles)\n\nconst PostItem = ({title, body, publishedDate, tags, id}) => {\n    const tagList = tags.map(\n        tag => <Link key={tag} to={`/tag/${tag}`}>#{tag}</Link>\n    )\n    return (\n        <div className={cx('post-item')}>\n            <h2><Link to={`post/${id}`}>{title}</Link></h2>\n            <div className={cx('date')}>{moment(publishedDate).format('ll')}</div>\n            <p>{removeMd(body)}</p>\n            <div className={cx('tags')}>\n                {tagList}\n            </div>\n        </div>\n    )\n}\n\nconst PostList = ({posts}) => {\n    const postList = posts.map(\n        (post) => {\n            const { _id, title, body, publishedDate, tags } = post.toJS()\n            return (\n                <PostItem\n                    title={title}\n                    body={body}\n                    publishedDate={publishedDate}\n                    tags={tags}\n                    key={_id}\n                    id={_id}\n                />\n            )\n        }\n    )\n    return (\n        <div className={cx('post-list')}>\n            {postList}\n        </div>\n    )\n}\n\nexport default PostList","import React from 'react'\nimport styles from './Pagination.scss'\nimport classNames from 'classnames/bind'\nimport Button from '../../common/Button/Button.js'\n\nconst cx = classNames.bind(styles)\n\nconst Pagination = ({page, lastPage, tag}) => {\n    const createPagePath = (page) => {\n        return tag ? `/tag/${tag}/${page}` : `/page/${page}`\n    }\n\n    return (\n        <div className={cx('pagination')}>\n            <Button disabled={page === 1} to={createPagePath(page - 1)}>\n                Previous Page\n            </Button>\n            <div className={cx('number')}>\n                Page {page}\n            </div>\n            <Button disabled={page === lastPage} to={createPagePath(page + 1)}>\n                Next Page\n            </Button>\n        </div>\n    )\n}\n\nexport default Pagination;","import { createAction, handleActions } from 'redux-actions'\n\nimport { Map, List, fromJS } from 'immutable';\nimport { pender } from 'redux-pender';\n\nimport * as api from 'lib/api'\n\n// action types\nconst GET_POST_LIST = 'list/GET_POST_LIST'\n\n// action creators\nexport const getPostList = createAction(GET_POST_LIST, api.getPostList, meta => meta)\n\n// initial state \nconst initialState = Map({\n    posts: List(),\n    lastPage: null\n});\n\n// reducer\nexport default handleActions({\n    ...pender({\n        type: GET_POST_LIST,\n        onSuccess: (state, action) => {\n            const { data: posts } = action.payload\n\n            const lastPage = action.payload.headers['last-page']\n            return state.set('posts', fromJS(posts))\n                        .set('lastPage', parseInt(lastPage, 10))\n        }\n    })\n}, initialState)","import React, { Component } from 'react'\nimport PostList from '../../components/list/PostList/PostList'\nimport Pagination from '../../components/list/Pagination/Pagination'\nimport { connect } from 'react-redux'\nimport { bindActionCreators } from 'redux'\nimport * as listActions from '../../store/modules/list'\n\nclass ListContainer extends Component {\n    getPostList = () => {\n        // Get the Page and tag value from the parent side\n        const {tag, page, ListActions } = this.props\n        ListActions.getPostList({\n            page,\n            tag\n        })\n    }\n\n    componentDidMount() {\n        this.getPostList()\n    }\n\n    componentDidUpdate(prevProps, prevState) {\n        // Call list on change with Page/tag\n        if(prevProps.page !== this.props.page || prevProps.tag !== this.props.tag) {\n            this.getPostList()\n            // Put the scrollbar on the top\n            document.documentElement.scrollTop = 0\n        }\n    }\n\n    render() {\n        const { loading, posts, page, lastPage, tag } = this.props\n        if(loading) return null // Nothing shows up during loading\n        return (\n            <div>\n                <PostList posts={posts}/>\n                <Pagination page={page} lastPage={lastPage} tag={tag}/>\n            </div>\n        )\n    }\n}\n\nexport default connect(\n    (state) => ({\n        lastPage: state.list.get('lastPage'),\n        posts: state.list.get('posts'),\n        loading: state.pender.pending['list/GET_POST_LIST']\n    }),\n    (dispatch) => ({\n        ListActions: bindActionCreators(listActions, dispatch)\n    })\n)(ListContainer)\n","import React, { Component } from 'react'\nimport styles from './VideoTop.scss'\nimport classNames from 'classnames/bind'\n\nconst cx = classNames.bind(styles)\n\nclass VideoTop extends Component {\n    render() {\n        return (\n            <div className={cx('video-top')}>\n                <div className={cx('iframe-container')}>\n                    <div className={cx('iframe-wrapper')}>\n                        <iframe\n                            title=\"youtube video\"\n                            frameborder=\"0\"\n                            width=\"1280\"\n                            height=\"720\"\n                            src=\"https://www.youtube.com/embed/VSN4Bz1QGrU?autoplay=1\"\n                            allow=\"autoplay\"\n                            allowFullScreen\n                        />\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default VideoTop\n","import React from 'react';\nimport PageTemplate from '../components/common/PageTemplate'\nimport ListWrapper from '../containers/ListWrapper/ListWrapper'\nimport ListContainer from '../containers/list/ListContainer'\nimport VideoTop from '../containers/VideoTop/VideoTop'\n\nconst ListPage = ({match}) => {\n    const { page = 1, tag } = match.params\n    return (\n        <PageTemplate>\n            <VideoTop/>\n            <ListWrapper>\n                <ListContainer\n                    page={parseInt(page, 10)}\n                    tag={tag}\n                />\n            </ListWrapper>\n        </PageTemplate>\n    )\n}\n\nexport default ListPage;","import React from 'react'\nimport styles from './Postinfo.scss'\nimport classNames from 'classnames/bind'\n\nimport { Link } from 'react-router-dom'\nimport moment from 'moment'\n\nconst cx = classNames.bind(styles)\n\nconst PostInfo = ({publishedDate, title, tags}) => (\n    <div className={cx('post-info')}>\n        <div className={cx('info')}>\n            <h1>{title}</h1>\n            <div className={cx('tags')}>\n                {\n                    // Execute map on tags exsition\n                    tags && tags.map(\n                        tag => <Link key={tag} to={`/tag/${tag}`}>#{tag}</Link>\n                    )\n                }\n            </div>\n            <div className={cx('date')}>{moment(publishedDate).format('ll')}</div>\n        </div>\n    </div>\n)\n\nexport default PostInfo","import React, { Component } from 'react'\nimport styles from './MarkdownRender.scss'\nimport classNames from 'classnames/bind'\n\nimport marked from 'marked'\n\n// Call the prism code\nimport Prism from 'prismjs'\nimport 'prismjs/themes/prism-okaidia.css'\n// call the code structure\nimport 'prismjs/components/prism-bash.min.js'\nimport 'prismjs/components/prism-javascript.min.js'\nimport 'prismjs/components/prism-jsx.min.js'\nimport 'prismjs/components/prism-css.min.js'\n\nconst cx = classNames.bind(styles)\n\nexport default class MarkdownRender extends Component {\n    state = {\n        html: ''\n    }\n\n    renderMarkdown = () => {\n        const { markdown } = this.props;\n        // blank if there are no markdown\n        if(!markdown) {\n            this.setState({ html : ''})\n            return\n        }\n        this.setState({\n            html: marked(markdown, {\n                breaks: true, // new line with enter\n                sanitize: true // Rid on markdown html\n            })\n        })\n    }\n\n    constructor(props) {\n        super(props)\n        const { markdown } = props\n        // To make work markdown on serverside\n        this.state = {\n            html: markdown ? marked(props.markdown, { breaks: true, sanitize: true }) : ''\n        }\n    }    \n\n    componentDidUpdate(prevProps, prevState) {\n        // Call renderMarkdown on change with markdown\n        if(prevProps.markdown !== this.props.markdown) {\n            this.renderMarkdown()\n        }\n        // Code highlighting on change of state\n        if(prevState.html !== this.state.html) {\n            Prism.highlightAll()\n        }\n    }\n\n    componentDidMount() {\n        Prism.highlightAll()\n    }\n\n    render() {\n        const { html } = this.state\n\n        // __html setting on the html to html rendering on the React\n        const markup = {\n            __html: html\n        }\n\n        // Need to put dangerouslySetinnerHTML on the object\n        return (\n            <div className={cx('markdown-render')} dangerouslySetInnerHTML={markup}/>\n        )\n    }\n}","import React from 'react'\nimport styles from './PostBody.scss'\nimport classNames from 'classnames/bind'\nimport MarkdownRender from '../../../components/common/MarkdownRender/MarkdownRender'\n\nconst cx = classNames.bind(styles)\n\nconst PostBody = ({body}) => (\n    <div className={cx('post-body')}>\n        <div className={cx('paper')}>\n            <MarkdownRender markdown={body}/>\n        </div>\n    </div>\n)\n\nexport default PostBody","import { createAction, handleActions } from 'redux-actions'\n\nimport { Map, fromJS } from 'immutable';\nimport { pender } from 'redux-pender';\n\nimport * as api from '../../lib/api'\n\n// action types\nconst GET_POST = 'post/GET_POST'\nconst REMOVE_POST = 'post/REMOVE_POST'\n\n// action creators\nexport const getPost = createAction(GET_POST, api.getPost)\nexport const removePost = createAction(REMOVE_POST, api.removePost)\n\n// initial state \nconst initialState = Map({\n    post: Map({})\n});\n\n// reducer\nexport default handleActions({\n    ...pender({\n        type: GET_POST,\n        onSuccess: (state, action) => {\n            const { data: post } = action.payload\n            return state.set('post', fromJS(post))\n        }\n    })\n}, initialState)","import React, { Component } from 'react'\nimport PostInfo from '../../components/post/Postinfo/Postinfo'\nimport PostBody from '../../components/post/PostBody/PostBody'\nimport * as postActions from '../../store/modules/post'\nimport { connect } from 'react-redux'\nimport { bindActionCreators } from 'redux'\n\nclass Post extends Component {\n    initialize = async () => {\n        const { PostActions, id } = this.props\n        try {\n            await PostActions.getPost(id)\n        } catch(e) {\n            console.log(e)\n        }\n    }\n\n    componentDidMount() {\n        this.initialize()\n    }\n\n    render() {\n        const { loading, post } = this.props\n\n        if(loading) return null // Nothing shows on loading\n\n        const { title, body, publishedDate, tags } = post.toJS()\n\n        return (\n            <div>\n                <PostInfo title={title} publishedDate={publishedDate} tags={tags}/>\n                <PostBody body={body}/>\n            </div>\n        )\n    }\n}\n\nexport default connect(\n    (state) => ({\n        post: state.post.get('post'),\n        loading: state.pender.pending['post/GET_POST'] //loading\n    }),\n    (dispatch) => ({\n        PostActions: bindActionCreators(postActions, dispatch)\n    })\n)(Post)","import React, { Component } from 'react'\nimport styles from './ModalWrapper.scss'\nimport classNames from 'classnames/bind'\n\nconst cx = classNames.bind(styles)\n\nexport default class ModalWrapper extends Component {\n    state = {\n        animate: false\n    }\n\n    startAnimations = () => {\n        // Set animate value true\n        this.setState({\n            animate: true\n        })\n        // Set false after 250ms\n        setTimeout(() => {\n            this.setState({\n                animate: false\n            })\n        }, 250)\n    }\n\n    componentDidUpdate(prevProps, prevState) {\n        if(prevProps.visible !== this.props.visible) {\n            this.startAnimations()\n        }\n    }\n\n    render() {\n        const { children, visible } = this.props\n        const { animate } = this.state;\n\n        // Only both of visible and animate is false\n        // return null\n        if(!visible && !animate) return null\n\n        // Set animation on state\n        const animation = animate && (visible ? 'enter' : 'leave')\n        return (\n            <div>\n                <div className={cx('gray-background', animation)}/>\n                <div className={cx('modal-wrapper')}>\n                    <div className={cx('modal', animation)}>\n                        {children}\n                    </div>\n                </div>\n            </div>    \n        )\n    }\n}","import React from 'react'\nimport styles from './AskRemoveModal.scss'\nimport classNames from 'classnames/bind'\nimport ModalWrapper from '../ModalWrapper/ModalWrapper'\nimport Button from '../../common/Button/Button'\n\nconst cx = classNames.bind(styles)\n\nconst AskRemoveModal = ({visible, onConfirm, onCancel}) => (\n    <ModalWrapper visible={visible}>\n        <div className={cx('question')}>\n            <div className={cx('title')}>Remove Post</div>\n            <div className={cx('description')}>Do you want to delete the Post?</div>\n        </div>\n        <div className={cx('options')}>\n            <Button theme=\"gray\" onClick={onCancel}>Cancel</Button>\n            <Button onClick={onConfirm}>Remove</Button>\n        </div>\n    </ModalWrapper>\n)\n\nexport default AskRemoveModal","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { bindActionCreators } from 'redux'\nimport * as baseActions from 'store/modules/base'\nimport * as postActions from 'store/modules/post'\nimport AskRemoveModal from '../../components/modal/AskRemoveModal/AskRemoveModal'\nimport { withRouter } from 'react-router-dom'\n\nclass AskRemoveModalContainer extends Component {\n    handleCancel = () => {\n        const { BaseActions } = this.props\n        BaseActions.hideModal('remove')\n    }\n\n    handleConfirm = async () => {\n        const { BaseActions, PostActions, history, match } = this.props\n        const { id } = match.params\n\n        try {\n            // After deleting post, turn off the modal and move to website\n            await PostActions.removePost(id)\n            BaseActions.hideModal('remove')\n            history.push('/')\n        } catch(e) {\n            console.log(e)\n        }\n    }\n\n    render() {\n        const { visible } = this.props\n        const { handleCancel, handleConfirm } = this\n\n        return (\n            <AskRemoveModal \n                visible={visible} \n                onCancel={handleCancel}\n                onConfirm={handleConfirm}\n            />\n        )\n    }\n}\n\nexport default connect(\n    (state) => ({\n        visible: state.base.getIn(['modal', 'remove'])\n    }),\n    (dispatch) => ({\n        BaseActions: bindActionCreators(baseActions, dispatch),\n        PostActions: bindActionCreators(postActions, dispatch)\n    })\n)(withRouter(AskRemoveModalContainer))","import React from 'react'\nimport PageTemplate from '../components/common/PageTemplate'\nimport Post from '../containers/post/Post'\nimport AskRemoveModalContainer from '../containers/modal/AskRemoveModalcontainer'\n\nconst PostPage = ({match}) => {\n    const { id } = match.params\n    return (\n        <PageTemplate>\n            <Post id={id} />\n            <AskRemoveModalContainer/>\n        </PageTemplate>\n    )\n}\n\nexport default PostPage;","import React, { Component } from 'react'\nimport styles from './EditorTemplate.scss'\nimport classNames from 'classnames/bind'\n\nconst cx = classNames.bind(styles)\n\nclass EditorTemplate extends Component {\n    state = {\n        leftPercentage: 0.5\n    }\n\n    // leftPercentage update on mouse click\n    handleMouseMove = (e) => {\n        this.setState({\n            leftPercentage: e.clientX / window.innerWidth\n        })\n    }\n\n    // Get rid of the event on Mouse out\n    handleMouseUp = (e) => {\n        document.body.removeEventListener('mousemove', this.handleMouseMove)\n        window.removeEventListener('mouseup', this.handleMouseUp)\n    }\n\n    // On click the separator\n    handleSeparatorMouseDown = (e) => {\n        document.body.addEventListener('mousemove', this.handleMouseMove)\n        window.addEventListener('mouseup', this.handleMouseUp)\n    }\n    render() {\n        const { header, editor, preview } = this.props\n        const { leftPercentage } = this.state\n        const { handleSeparatorMouseDown } = this\n\n        // Flex on the each area\n        const leftStyle = {\n            flex: leftPercentage\n        }\n        const rightStyle = {\n            flex: 1 - leftPercentage\n        }\n\n        // setting the separator location\n        const separatorStyle = {\n            left: `${leftPercentage * 100}%`\n        }\n\n        return (\n            <div className={cx('editor-template')}>\n                {header}\n                <div className={cx('panes')}>\n                    <div className={cx('pane', 'editor')} style={leftStyle}>\n                        {editor}\n                    </div>\n                    <div className={cx('pane', 'preview')} style={rightStyle}>\n                        {preview}\n                    </div>\n                <div\n                    className={cx('separator')}\n                    style={separatorStyle}\n                    onMouseDown={handleSeparatorMouseDown}/>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default EditorTemplate","import React from 'react'\nimport styles from './EditorHeader.scss'\nimport classNames from 'classnames/bind'\nimport Button from '../../common/Button/Button'\n\nconst cx = classNames.bind(styles)\n\nconst EditorHeader = ({onGoBack, onSubmit, isEdit}) => {\n    return (\n        <div className={cx('editor-header')}>\n            <div className={cx('back')}>\n                <Button onClick={onGoBack} theme=\"outline\">Go back</Button>\n            </div>\n            <div className={cx('submit')}>\n                <Button onClick={onSubmit} theme=\"outline\">{isEdit ? 'Edit' : 'Submit'}</Button>\n            </div>\n        </div>\n    )\n}\n\nexport default EditorHeader","import React, { Component } from 'react'\nimport styles from './EditorPane.scss'\nimport classNames from 'classnames/bind'\n\nimport CodeMirror from 'codemirror'\n\nimport 'codemirror/mode/markdown/markdown' // Color for the markdown \n// Code color in the markdown\nimport 'codemirror/mode/javascript/javascript';\nimport 'codemirror/mode/jsx/jsx'\nimport 'codemirror/mode/css/css'\nimport 'codemirror/mode/shell/shell'\n\n// Css style for the CodeMirror\nimport 'codemirror/lib/codemirror.css'\nimport 'codemirror/theme/monokai.css'\n\nconst cx = classNames.bind(styles)\n\nexport default class EditorPane extends Component {\n\n    editor = null // Editor ref\n    codeMirror = null // CodeMirror instance\n    cursor = null // Cursor location on the editor text\n\n    initializeEditor = () => {\n        this.codeMirror = CodeMirror(this.editor, {\n            mode: 'markdown',\n            theme: 'monokai',\n            lineNumbers: true, // Put line number on left line\n            lineWrapping: true // If it is too long write on next line\n        })\n        this.codeMirror.on('change', this.handleChangeMarkdown)\n    }\n\n    componentDidMount() {\n        this.initializeEditor();\n    }\n\n    handleChange = (e) => {\n        const { onChangeInput } = this.props\n        const { value, name } = e.target\n        onChangeInput({name, value})\n    }\n\n    handleChangeMarkdown = (doc) => {\n        const { onChangeInput } = this.props\n        this.cursor = doc.getCursor() // Save text cursor location\n        onChangeInput({\n            name: 'markdown',\n            value: doc.getValue()\n        })\n    }\n\n    componentDidUpdate(prevProps, prevState) {\n        // Editor change on markdown change\n        // Because text cursor location has initialised\n        // Set location on the saved cursor \n        if(prevProps.markdown !== this.props.markdown) {\n            const { codeMirror, cursor } = this\n            if(!codeMirror) return // Before instance created\n            codeMirror.setValue(this.props.markdown)\n            if(!cursor) return\n            codeMirror.setCursor(cursor)\n        }\n    }\n\n    render() {\n        const { handleChange } = this\n        const { tags, title } = this.props\n        \n        return (\n            <div className={cx('editor-pane')}>\n                <input \n                    className={cx('title')} \n                    placeholder=\"Write the title\" \n                    name=\"title\"\n                    value={title}\n                    onChange={handleChange}\n                />\n                <div className={cx('code-editor')} ref={ref => this.editor=ref}></div>\n                <div className={cx('tags')}>\n                    <div className={cx('description')}>Tag</div>\n                    <input \n                        name=\"tags\" \n                        placeholder=\"Input the tag (seperate with ,)\"\n                        value={tags}\n                        onChange={handleChange}\n                    />\n                </div>\n            </div>\n        )\n    }\n}","import { createAction, handleActions } from 'redux-actions'\nimport * as api from '../../lib/api'\n\nimport { Map } from 'immutable'\nimport { pender } from 'redux-pender'\n\n// action types\nconst INITIALIZE = 'editor/INITIALIZE'\nconst CHANGE_INPUT = 'editor/CHANGE_INPUT'\nconst WRITE_POST = 'editor/WRITE_POST'\nconst GET_POST = 'editor/GET_POST'\nconst EDIT_POST = 'editor/EDIT_POST'\n\n// action creators\nexport const initialize = createAction(INITIALIZE)\nexport const changeInput = createAction(CHANGE_INPUT)\nexport const writePost = createAction(WRITE_POST, api.writePost)\nexport const getPost = createAction(GET_POST, api.getPost)\nexport const editPost = createAction(EDIT_POST, api.editPost)\n\n// initial state \nconst initialState = Map({\n    title: '',\n    markdown: '',\n    tags: '',\n    postId: null\n});\n\n// reducer\nexport default handleActions({\n    [INITIALIZE]: (state, action) => initialState,\n    [CHANGE_INPUT]: (state, action) => {\n        const {name, value } = action.payload;\n        return state.set(name, value);\n    },\n    ...pender({\n        type: WRITE_POST,\n        onSuccess: (state, action) => {\n            const { _id } = action.payload.data;\n            return state.set('postId', _id)\n        }\n    }),\n    ...pender({\n        type: GET_POST,\n        onSuccess: (state, action) => {\n            const { title, tags, body } = action.payload.data\n            return state.set('title', title)\n                        .set('markdown', body)\n                        .set('tags', tags.join(', ')) // array -> string can classify with ,\n        }\n    })\n}, initialState)","import React, { Component } from 'react'\nimport EditorPane from '../../components/editor/EditorPane/EditorPane' \nimport { bindActionCreators } from 'redux'\nimport { connect } from 'react-redux'\nimport * as editorActions from '../../store/modules/editor'\n\nclass EditorPaneContainer extends Component {\n\n    handleChangeInput = ({name, value}) => {\n        const { EditorActions } = this.props\n        EditorActions.changeInput({name, value})\n    }\n\n    render() {\n        const { title, tags, markdown } = this.props;\n        const { handleChangeInput } = this\n        \n        return (\n            <EditorPane\n                title={title}\n                markdown={markdown}\n                tags={tags}\n                onChangeInput={handleChangeInput}\n            />\n        )\n    }\n}\n\nexport default connect(\n    (state) => ({\n        title: state.editor.get('title'),\n        markdown: state.editor.get('markdown'),\n        tags: state.editor.get('tags')\n    }),\n    (dispatch) => ({\n        EditorActions: bindActionCreators(editorActions, dispatch)\n    })\n)(EditorPaneContainer)","import React from 'react'\nimport styles from './PreviewPane.scss'\nimport classNames from 'classnames/bind'\nimport MarkdownRender from '../../common/MarkdownRender/MarkdownRender'\n\nconst cx = classNames.bind(styles)\n\nconst PreviewPane = ({markdown, title}) => (\n    <div className={cx('preview-pane')}>\n        <h1 className={cx('title')}>\n            {title}\n        </h1>\n        <div>\n            <MarkdownRender markdown={markdown}/>\n        </div>\n    </div>\n)\n\nexport default PreviewPane","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport PreviewPane from '../../components/editor/PreviewPane/PreviewPane'\n\nclass PreviewPaneContainer extends Component {\n    render() {\n        const { markdown, title } = this.props\n        return (\n            <PreviewPane title={title} markdown={markdown}/>\n        )\n    }\n}\n\nexport default connect(\n    (state) => ({\n        title: state.editor.get('title'),\n        markdown: state.editor.get('markdown')\n    })\n)(PreviewPaneContainer)","import React, { Component } from 'react'\nimport EditorHeader from '../../components/editor/EditorHeader/EditorHeader'\nimport { connect } from 'react-redux'\nimport { bindActionCreators } from 'redux'\nimport { withRouter } from 'react-router-dom'\n\nimport * as editorActions from '../../store/modules/editor'\n\nimport queryString from 'query-string'\n\nclass EditorHeaderContainer extends Component {\n    componentDidMount() {\n        const { EditorActions, location } = this.props;\n        EditorActions.initialize() // initialize editor\n\n        // query parsing\n        const { id } = queryString.parse(location.search)\n        if(id) {\n            // Post when id exist\n            EditorActions.getPost(id)\n        }\n    }\n\n    handleGoback = () => {\n        const { history } = this.props\n        history.goBack()\n    }\n\n    handleSubmit = async () => {\n        const { title, markdown, tags, EditorActions, history, location } = this.props\n        const post = {\n            title,\n            body: markdown,\n            // Eliminate duplications and divide tag text with ,\n            tags: tags === \"\" ?[]:[...new Set(tags.split(',').map(tag => tag.trim()))]\n        }\n        try {\n            // Call editPost if id exist\n            const { id } = queryString.parse(location.search)\n            if(id) {\n                await EditorActions.editPost({id, ...post})\n                history.push(`/post/${id}`)\n                return\n            }\n            await EditorActions.writePost(post);\n            // move the page. caution: postId don't make reference on top need to search this.props.postId in this site\n            history.push(`/post/${this.props.postId}`)\n        } catch(e) {\n            console.log(e)\n        }\n    }\n\n    render() {\n        const { handleGoback, handleSubmit } = this\n        const { id } = queryString.parse(this.props.location.search)\n        return (\n            <EditorHeader\n                onGoBack={handleGoback}\n                onSubmit={handleSubmit}\n                isEdit={id ? true : false}\n            />\n        )\n    }\n}\n\nexport default connect(\n    (state) => ({\n        title: state.editor.get('title'),\n        markdown: state.editor.get('markdown'),\n        tags: state.editor.get('tags'),\n        postId: state.editor.get('postId')\n    }),\n    (dispatch) => ({\n        EditorActions: bindActionCreators(editorActions, dispatch)\n    })\n)(withRouter(EditorHeaderContainer))","import React from 'react';\nimport EditorTemplate from '../components/editor/EditorTemplate/EditorTemplate'\nimport EditorHeader from '../components/editor/EditorHeader/EditorHeader'\nimport EditorPaneContainer from '../containers/editor/EditorPaneContainer'\nimport PreviewPaneContainer from '../containers/editor/PreviewPaneContainer';\nimport EditorHeaderContainer from '../containers/editor/EditorHeaderContainer'\n\nconst EditorPage = () => {\n    return (\n        <EditorTemplate\n            header={<EditorHeaderContainer/>}\n            editor={<EditorPaneContainer/>}\n            preview={<PreviewPaneContainer/>}\n        />\n    )\n}\n\nexport default EditorPage;","import React from 'react';\n\nconst NotFoundPage = () => {\n    return (\n        <div>\n            NotFound\n        </div>\n    )\n}\n\nexport default NotFoundPage;","import React from 'react'\nimport styles from './LoginModal.scss'\nimport classNames from 'classnames/bind'\nimport ModalWrapper from '../ModalWrapper/ModalWrapper'\n\nconst cx = classNames.bind(styles)\n\nconst LoginModal = ({\n    visible, password, error, onCancel, onLogin, onChange, onKeyPress\n}) => (\n    <ModalWrapper visible={visible}>\n        <div className={cx('form')}>\n            <div onClick={onCancel} className={cx('close')}>&times;</div>\n            <div className={cx('title')}>Login</div>\n            <div className={cx('description')}>Please enter your password</div>\n            <input autoFocus type=\"password\" placeholder=\"input password\" value={password} onChange={onChange} onKeyPress={onKeyPress}/>\n            { error && <div className={cx('error')}>Login failed</div> }\n            <div className={cx('login')} onClick={onLogin}>Login</div>\n        </div>\n    </ModalWrapper>\n)\n\nexport default LoginModal","import React, { Component } from 'react'\nimport LoginModal from '../../components/modal/LoginModal/LoginModal'\nimport { connect } from 'react-redux'\nimport { bindActionCreators } from 'redux'\nimport * as baseActions from '../../store/modules/base'\n\nclass LoginModalContainer extends Component {\n    handleLogin = async () => {\n        const { BaseActions, password } = this.props\n        try {\n            // Login, on sucess => close modal\n            await BaseActions.login(password)\n            BaseActions.hideModal('login')\n            localStorage.logged = \"true\"\n        } catch(e) {\n            console.log(e)\n        }\n\n    }\n    handleCancel = () => {\n        const { BaseActions } = this.props\n        BaseActions.hideModal('login')\n    }\n    handleChange = (e) => {\n        const { BaseActions } = this.props\n        const { value } = e.target\n        BaseActions.changePasswordInput(value)\n    }\n    handleKeyPress = (e) => {\n        // Login on enter key\n        if(e.key === 'Enter') {\n            this.handleLogin()\n        }\n    }\n    render() {\n        const {\n            handleLogin, handleCancel, handleChange, handleKeyPress\n        } = this\n        const { visible, error, password } = this.props\n\n        return (\n            <LoginModal\n                onLogin={handleLogin} onCancel={handleCancel}\n                onChange={handleChange} onKeyPress={handleKeyPress}\n                visible={visible} error={error} password={password}\n            />\n        )\n    }\n}\n\nexport default connect(\n    (state) => ({\n        visible: state.base.getIn(['modal', 'login']),\n        password: state.base.getIn(['loginModal', 'password']),\n        error: state.base.getIn(['loginModal', 'error'])\n    }),\n    (dispatch) => ({\n        BaseActions: bindActionCreators(baseActions, dispatch)\n    })\n)(LoginModalContainer)","import React, { Component } from 'react'\nimport LoginModalContainer from '../modal/LoginModalContainer'\nimport { connect } from 'react-redux'\nimport { bindActionCreators } from 'redux'\nimport * as baseActions from '../../store/modules/base'\n\nclass Base extends Component {\n    initialize = async () => {\n        const { BaseActions } = this.props\n        if(localStorage.logged === \"true\") {\n            BaseActions.tempLogin()\n        }\n        BaseActions.checkLogin()\n    }\n    comoponentDidMount() {\n        this.initialize()\n    }\n    render() {\n        return (\n            <div>\n                <LoginModalContainer/>\n                {/* rendering components on global scope */}\n            </div>\n        )\n    }\n}\n\nexport default connect(\n    null,\n    (dispatch) => ({\n        BaseActions: bindActionCreators(baseActions, dispatch)\n    })\n)(Base)","import React from 'react';\nimport { Switch, Route } from 'react-router-dom';\nimport { ListPage, PostPage, EditorPage, NotFoundPage } from '../pages';\nimport Base from 'containers/common/Base'\n\nconst App = () => {\n    return (\n        <div>\n            <Switch>\n                <Route exact path=\"/\" component={ListPage}/>\n                <Route path=\"/page/:page\" component={ListPage}/>\n                <Route path=\"/tag/:tag/:page?\" component={ListPage}/>\n                <Route path=\"/post/:id\" component={PostPage}/>\n                <Route path=\"/editor\" component={EditorPage}/>\n                <Route component={NotFoundPage}/>\n            </Switch>\n            <Base/>\n        </div>\n    );\n};\n\nexport default App","import { createStore, applyMiddleware, compose, combineReducers } from 'redux';\nimport penderMiddleware from 'redux-pender';\nimport * as modules from './modules'\n\nconst reducers = combineReducers(modules);\nconst middlewares = [penderMiddleware()];\n\n// Apply Redux Devtools only on Dev mode\nconst isDev = process.env.NODE_ENV === 'developement';\nconst devtools = isDev && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__;\nconst composeEnhancers = devtools || compose;\n\n// preloadedState is initial state after rendering serverside\nconst configure = (preloadedState) => createStore(reducers, preloadedState, composeEnhancers(applyMiddleware(...middlewares)));\n\nexport default configure;","import React from 'react';\nimport { BrowserRouter } from 'react-router-dom';\nimport App from './components/App';\nimport { Provider } from 'react-redux';\nimport configure from './store/configure'\n\nconst store = configure();\n\nconst Root = () => {\n    return (\n        <Provider store = { store }>\n            <BrowserRouter>\n                <App/>\n            </BrowserRouter>\n        </Provider>\n    );\n}\n\nexport default Root","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6  address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Root from './Root';\nimport * as serviceWorker from './serviceWorker';\nimport 'styles/base.scss';\n\nReactDOM.render( <Root />, document.getElementById( 'root' ) );\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/eastlead_profile.175f41da.jpg\";"],"sourceRoot":""}